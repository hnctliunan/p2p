<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hl.dao.security.TbSecurityAccountMapper" >
  <resultMap id="BaseResultMap" type="com.hl.entity.security.TbSecurityAccount" >
    <id column="data_id" property="dataId" jdbcType="CHAR" />
    <result column="data_enable" property="dataEnable" jdbcType="CHAR" />
    <result column="data_insert_time" property="dataInsertTime" jdbcType="TIMESTAMP" />
    <result column="data_update_time" property="dataUpdateTime" jdbcType="TIMESTAMP" />
    <result column="data_delete_time" property="dataDeleteTime" jdbcType="TIMESTAMP" />
    <result column="extension_a" property="extensionA" jdbcType="VARCHAR" />
    <result column="extension_b" property="extensionB" jdbcType="VARCHAR" />
    <result column="extension_c" property="extensionC" jdbcType="VARCHAR" />
    <result column="extension_d" property="extensionD" jdbcType="VARCHAR" />
    <result column="extension_e" property="extensionE" jdbcType="VARCHAR" />
    <result column="extension_f" property="extensionF" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="login_pass" property="loginPass" jdbcType="VARCHAR" />
    <result column="login_salt" property="loginSalt" jdbcType="VARCHAR" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="login_lock" property="loginLock" jdbcType="CHAR" />
    <result column="login_detail" property="loginDetail" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    data_id, data_enable, data_insert_time, data_update_time, data_delete_time, extension_a, 
    extension_b, extension_c, extension_d, extension_e, extension_f, login_name, login_pass, 
    login_salt, login_time, login_lock, login_detail
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hl.entity.security.TbSecurityAccountExample" >
    <include refid="MySQLDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_security_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="MySQLDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tb_security_account
    where data_id = #{dataId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tb_security_account
    where data_id = #{dataId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hl.entity.security.TbSecurityAccountExample" >
    delete from tb_security_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hl.entity.security.TbSecurityAccount" >
    insert into tb_security_account (data_id, data_enable, data_insert_time, 
      data_update_time, data_delete_time, extension_a, 
      extension_b, extension_c, extension_d, 
      extension_e, extension_f, login_name, 
      login_pass, login_salt, login_time, 
      login_lock, login_detail)
    values (#{dataId,jdbcType=CHAR}, #{dataEnable,jdbcType=CHAR}, #{dataInsertTime,jdbcType=TIMESTAMP}, 
      #{dataUpdateTime,jdbcType=TIMESTAMP}, #{dataDeleteTime,jdbcType=TIMESTAMP}, #{extensionA,jdbcType=VARCHAR}, 
      #{extensionB,jdbcType=VARCHAR}, #{extensionC,jdbcType=VARCHAR}, #{extensionD,jdbcType=VARCHAR}, 
      #{extensionE,jdbcType=VARCHAR}, #{extensionF,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{loginPass,jdbcType=VARCHAR}, #{loginSalt,jdbcType=VARCHAR}, #{loginTime,jdbcType=TIMESTAMP}, 
      #{loginLock,jdbcType=CHAR}, #{loginDetail,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hl.entity.security.TbSecurityAccount" >
    insert into tb_security_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dataId != null" >
        data_id,
      </if>
      <if test="dataEnable != null" >
        data_enable,
      </if>
      <if test="dataInsertTime != null" >
        data_insert_time,
      </if>
      <if test="dataUpdateTime != null" >
        data_update_time,
      </if>
      <if test="dataDeleteTime != null" >
        data_delete_time,
      </if>
      <if test="extensionA != null" >
        extension_a,
      </if>
      <if test="extensionB != null" >
        extension_b,
      </if>
      <if test="extensionC != null" >
        extension_c,
      </if>
      <if test="extensionD != null" >
        extension_d,
      </if>
      <if test="extensionE != null" >
        extension_e,
      </if>
      <if test="extensionF != null" >
        extension_f,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="loginPass != null" >
        login_pass,
      </if>
      <if test="loginSalt != null" >
        login_salt,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="loginLock != null" >
        login_lock,
      </if>
      <if test="loginDetail != null" >
        login_detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dataId != null" >
        #{dataId,jdbcType=CHAR},
      </if>
      <if test="dataEnable != null" >
        #{dataEnable,jdbcType=CHAR},
      </if>
      <if test="dataInsertTime != null" >
        #{dataInsertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataUpdateTime != null" >
        #{dataUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataDeleteTime != null" >
        #{dataDeleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extensionA != null" >
        #{extensionA,jdbcType=VARCHAR},
      </if>
      <if test="extensionB != null" >
        #{extensionB,jdbcType=VARCHAR},
      </if>
      <if test="extensionC != null" >
        #{extensionC,jdbcType=VARCHAR},
      </if>
      <if test="extensionD != null" >
        #{extensionD,jdbcType=VARCHAR},
      </if>
      <if test="extensionE != null" >
        #{extensionE,jdbcType=VARCHAR},
      </if>
      <if test="extensionF != null" >
        #{extensionF,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPass != null" >
        #{loginPass,jdbcType=VARCHAR},
      </if>
      <if test="loginSalt != null" >
        #{loginSalt,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginLock != null" >
        #{loginLock,jdbcType=CHAR},
      </if>
      <if test="loginDetail != null" >
        #{loginDetail,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hl.entity.security.TbSecurityAccountExample" resultType="java.lang.Integer" >
    select count(*) from tb_security_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_security_account
    <set >
      <if test="record.dataId != null" >
        data_id = #{record.dataId,jdbcType=CHAR},
      </if>
      <if test="record.dataEnable != null" >
        data_enable = #{record.dataEnable,jdbcType=CHAR},
      </if>
      <if test="record.dataInsertTime != null" >
        data_insert_time = #{record.dataInsertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dataUpdateTime != null" >
        data_update_time = #{record.dataUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dataDeleteTime != null" >
        data_delete_time = #{record.dataDeleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.extensionA != null" >
        extension_a = #{record.extensionA,jdbcType=VARCHAR},
      </if>
      <if test="record.extensionB != null" >
        extension_b = #{record.extensionB,jdbcType=VARCHAR},
      </if>
      <if test="record.extensionC != null" >
        extension_c = #{record.extensionC,jdbcType=VARCHAR},
      </if>
      <if test="record.extensionD != null" >
        extension_d = #{record.extensionD,jdbcType=VARCHAR},
      </if>
      <if test="record.extensionE != null" >
        extension_e = #{record.extensionE,jdbcType=VARCHAR},
      </if>
      <if test="record.extensionF != null" >
        extension_f = #{record.extensionF,jdbcType=VARCHAR},
      </if>
      <if test="record.loginName != null" >
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.loginPass != null" >
        login_pass = #{record.loginPass,jdbcType=VARCHAR},
      </if>
      <if test="record.loginSalt != null" >
        login_salt = #{record.loginSalt,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null" >
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginLock != null" >
        login_lock = #{record.loginLock,jdbcType=CHAR},
      </if>
      <if test="record.loginDetail != null" >
        login_detail = #{record.loginDetail,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_security_account
    set data_id = #{record.dataId,jdbcType=CHAR},
      data_enable = #{record.dataEnable,jdbcType=CHAR},
      data_insert_time = #{record.dataInsertTime,jdbcType=TIMESTAMP},
      data_update_time = #{record.dataUpdateTime,jdbcType=TIMESTAMP},
      data_delete_time = #{record.dataDeleteTime,jdbcType=TIMESTAMP},
      extension_a = #{record.extensionA,jdbcType=VARCHAR},
      extension_b = #{record.extensionB,jdbcType=VARCHAR},
      extension_c = #{record.extensionC,jdbcType=VARCHAR},
      extension_d = #{record.extensionD,jdbcType=VARCHAR},
      extension_e = #{record.extensionE,jdbcType=VARCHAR},
      extension_f = #{record.extensionF,jdbcType=VARCHAR},
      login_name = #{record.loginName,jdbcType=VARCHAR},
      login_pass = #{record.loginPass,jdbcType=VARCHAR},
      login_salt = #{record.loginSalt,jdbcType=VARCHAR},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      login_lock = #{record.loginLock,jdbcType=CHAR},
      login_detail = #{record.loginDetail,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hl.entity.security.TbSecurityAccount" >
    update tb_security_account
    <set >
      <if test="dataEnable != null" >
        data_enable = #{dataEnable,jdbcType=CHAR},
      </if>
      <if test="dataInsertTime != null" >
        data_insert_time = #{dataInsertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataUpdateTime != null" >
        data_update_time = #{dataUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataDeleteTime != null" >
        data_delete_time = #{dataDeleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extensionA != null" >
        extension_a = #{extensionA,jdbcType=VARCHAR},
      </if>
      <if test="extensionB != null" >
        extension_b = #{extensionB,jdbcType=VARCHAR},
      </if>
      <if test="extensionC != null" >
        extension_c = #{extensionC,jdbcType=VARCHAR},
      </if>
      <if test="extensionD != null" >
        extension_d = #{extensionD,jdbcType=VARCHAR},
      </if>
      <if test="extensionE != null" >
        extension_e = #{extensionE,jdbcType=VARCHAR},
      </if>
      <if test="extensionF != null" >
        extension_f = #{extensionF,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPass != null" >
        login_pass = #{loginPass,jdbcType=VARCHAR},
      </if>
      <if test="loginSalt != null" >
        login_salt = #{loginSalt,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginLock != null" >
        login_lock = #{loginLock,jdbcType=CHAR},
      </if>
      <if test="loginDetail != null" >
        login_detail = #{loginDetail,jdbcType=CHAR},
      </if>
    </set>
    where data_id = #{dataId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hl.entity.security.TbSecurityAccount" >
    update tb_security_account
    set data_enable = #{dataEnable,jdbcType=CHAR},
      data_insert_time = #{dataInsertTime,jdbcType=TIMESTAMP},
      data_update_time = #{dataUpdateTime,jdbcType=TIMESTAMP},
      data_delete_time = #{dataDeleteTime,jdbcType=TIMESTAMP},
      extension_a = #{extensionA,jdbcType=VARCHAR},
      extension_b = #{extensionB,jdbcType=VARCHAR},
      extension_c = #{extensionC,jdbcType=VARCHAR},
      extension_d = #{extensionD,jdbcType=VARCHAR},
      extension_e = #{extensionE,jdbcType=VARCHAR},
      extension_f = #{extensionF,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      login_pass = #{loginPass,jdbcType=VARCHAR},
      login_salt = #{loginSalt,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      login_lock = #{loginLock,jdbcType=CHAR},
      login_detail = #{loginDetail,jdbcType=CHAR}
    where data_id = #{dataId,jdbcType=CHAR}
  </update>
  <insert id="batchInsert" parameterType="java.util.List" >
    <foreach collection="records" item="record" index="index" separator=";" >
      insert into tb_security_account (data_id,data_enable,data_insert_time,data_update_time,data_delete_time,extension_a,extension_b,extension_c,extension_d,extension_e,extension_f,login_name,login_pass,login_salt,login_time,login_lock,login_detail) values (#{record.dataId,jdbcType=CHAR},#{record.dataEnable,jdbcType=CHAR},#{record.dataInsertTime,jdbcType=TIMESTAMP},#{record.dataUpdateTime,jdbcType=TIMESTAMP},#{record.dataDeleteTime,jdbcType=TIMESTAMP},#{record.extensionA,jdbcType=VARCHAR},#{record.extensionB,jdbcType=VARCHAR},#{record.extensionC,jdbcType=VARCHAR},#{record.extensionD,jdbcType=VARCHAR},#{record.extensionE,jdbcType=VARCHAR},#{record.extensionF,jdbcType=VARCHAR},#{record.loginName,jdbcType=VARCHAR},#{record.loginPass,jdbcType=VARCHAR},#{record.loginSalt,jdbcType=VARCHAR},#{record.loginTime,jdbcType=TIMESTAMP},#{record.loginLock,jdbcType=CHAR},#{record.loginDetail,jdbcType=CHAR})
    </foreach>
  </insert>
  <update id="batchUpdateByPrimaryKey" parameterType="java.util.List" >
    <foreach collection="records" item="record" index="index" separator=";" >
      update tb_security_account set data_id=#{record.dataId,jdbcType=CHAR},data_enable=#{record.dataEnable,jdbcType=CHAR},data_insert_time=#{record.dataInsertTime,jdbcType=TIMESTAMP},data_update_time=#{record.dataUpdateTime,jdbcType=TIMESTAMP},data_delete_time=#{record.dataDeleteTime,jdbcType=TIMESTAMP},extension_a=#{record.extensionA,jdbcType=VARCHAR},extension_b=#{record.extensionB,jdbcType=VARCHAR},extension_c=#{record.extensionC,jdbcType=VARCHAR},extension_d=#{record.extensionD,jdbcType=VARCHAR},extension_e=#{record.extensionE,jdbcType=VARCHAR},extension_f=#{record.extensionF,jdbcType=VARCHAR},login_name=#{record.loginName,jdbcType=VARCHAR},login_pass=#{record.loginPass,jdbcType=VARCHAR},login_salt=#{record.loginSalt,jdbcType=VARCHAR},login_time=#{record.loginTime,jdbcType=TIMESTAMP},login_lock=#{record.loginLock,jdbcType=CHAR},login_detail=#{record.loginDetail,jdbcType=CHAR} where data_id=#{record.dataId,jdbcType=CHAR}
    </foreach>
  </update>
  <delete id="batchDeleteByPrimaryKey" parameterType="java.util.List" >
    <foreach collection="records" item="record" index="index" separator=";" >
      delete from tb_security_account  where data_id=#{record}
    </foreach>
  </delete>
  <sql id="MySQLDialectPrefix" >
    <if test="pageSet != null" >
      select * from ( 
    </if>
  </sql>
  <sql id="MySQLDialectSuffix" >
    <if test="pageSet != null" >
      <![CDATA[ ) as _TB limit #{pageSet.start},#{pageSet.limit} ]]>
    </if>
  </sql>
</mapper>